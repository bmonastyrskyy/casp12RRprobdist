#!/usr/bin/perl

use strict;
use warnings;

###########################################################
#
# The script reformats the data generated by Andriy's script
# for more convenient format for R analysis.
#
###########################################################

$| = 1; # set forced autoflush 

my $INDIR = "../data";
my $OUTFILE = "$INDIR/TPFPbin.summarytable.txt";
my $domFile = "../data/casp12.domains.csv";
my %DOMS = &parseDomains();

my @TARGETS = &readListTargets();

open my $fh, "> $OUTFILE";
printf $fh "%-10s  %6s  %5s  %6s  %6s  %6s  %6s  %7s  %7s\n", "dom", "class", "gr", "pr.bin", 
                "No", "Tp", "Fp", "Tp.perc", "Fp.perc";
for my $t (@TARGETS){
  &processTarget($t , $fh);
}
close $fh;





# --------------------------
# SUBROUTINES
# --------------------------
sub readListTargets{
  my @targets;
  opendir D, "$INDIR";
  while(defined(my $f = readdir(D))){
	if ($f =~ m/^(T.*)\.TPFPbin/){
	   push @targets, $1;
	}
  }
  closedir D;
  return sort @targets;
}

sub parseDomains{
   my %doms;
   open D, "< $domFile";
   while(defined(my $l =<D>)){
	if ($l =~ m/^(\S+),(\S+)/) {
	   my $dom = $1; my $cl = $2;
	   $doms{$dom} = $cl;
	}
   }
   close D;
   return %doms;
} 

sub processTarget{
  my ($target, $fh) = @_;
  my $infile = "$INDIR/$target.TPFPbin";
  my %hash;
  open IN, "< $infile";
  my $gr;
  my $flag = 0;
  while (defined(my $l =<IN>)) {
    if ($l =~ m/Evaluating\s+model\s+\S+(RR\S+)_1/) {
	$gr = $1;
	$flag = 1;
	next;
    } elsif ($l =~ m/^\[/ ){
	$l =~ s/\[//g; $l =~ s/\]//g; $l =~ s/'//g; $l =~ s/\s+//g;
	my @arr = split(/,/, $l);
	if ($flag == 1) {
	   $hash{$gr}->{No} = \@arr;
	   $flag = 2;
	   next;
	} elsif ($flag == 2) {
	   $hash{$gr}->{tp} = \@arr;
	   $flag = 3;
	} elsif ($flag == 3){
	   $hash{$gr}->{fp} = \@arr;
           $flag = 0;
	}
    }
    
  }
  close IN;
  for my $gr (sort keys %hash){
    for (my $i = 0; $i < 10; $i++){
       printf $fh "%-10s  %6s  %5s  %6.1f  %6d  %6.0f  %6.0f  %7.3f  %7.3f\n", $target, $DOMS{$target}, $gr, (0.1*$i), 
		${$hash{$gr}->{No}}[$i], 
		${$hash{$gr}->{No}}[$i]*${$hash{$gr}->{tp}}[$i]*0.01, ${$hash{$gr}->{No}}[$i]*${$hash{$gr}->{fp}}[$i]*0.01,
		${$hash{$gr}->{tp}}[$i], ${$hash{$gr}->{fp}}[$i];
    }
  }
  
}
